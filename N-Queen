#include <iostream>
#include<vector>
using namespace std;
bool issafe( vector<vector<char>>maze,int row, int col,int n){
  int i=row;
  int j= col;
  while(j>=0){
    if(maze[i][j]=='Q'){
      return false;
      
    }
    j--;
  }
  i=row;
  j=col;
  while(i>=0 && j>=0){
    if(maze[i][j]=='Q'){
      return false;
    }
    i--;
    j--;
  }
  i=row;
  j=col;
  while(i<n && j>=0){
    if(maze[i][j]=='Q'){
      return false;
    }
    i++;j--;
  }
  return true;
}
void printing( vector<vector<char>>maze,int n){
  for(int i=0; i<n;i++){
    for(int j=0;j<n;j++){
      cout<<maze[i][j]<<" ";
    }
    cout<<endl;
  }
  cout<<endl;
}
void solve( vector<vector<char>>maze,int col,int n){
  //base case 
  if(col>=n){
    printing(maze,n);
    return;
  }
  //recursive casse
  for(int row=0;row<n;row++){
  if(issafe(maze,row,col,n)){
    maze[row][col]='Q';
    solve(maze,col+1,n);
    maze[row][col]='-';
  }
  }
  
}
int main(){
int n;
  cin>>n;
  vector<vector<char>>maze(n,vector<char>(n,'-'));
  int col=0;
  solve(maze,col,n);
  
  return 0;
  
}
