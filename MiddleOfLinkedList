#include <iostream>
using namespace std;
class Node{
public:
int data;
Node*next;
Node(int data){
  this->data=data;
  this->next=NULL;
}
};
int length(Node *&head){
  int i=1;
  Node*temp=head;
  while(temp->next!=NULL){
    i++;
    temp=temp->next;
  }
  return i;
}
Node* mid(Node*head){
  int l=length(head);
   int middle;
  if(l%2==0){
     middle=l/2;
  }
  else{
    middle=(l/2)+1;
  }
  int i=1;
  while(i<middle){
    i++;
    head=head->next;
  }
  return head;
}
int main() { 
  Node *head=new Node(10);
  Node *second=new Node(20);
  Node *third=new Node(30);
  Node *fourth=new Node(40);
  Node *fifth=new Node(50);
  head->next=second;
  second->next=third;
  third->next=fourth;
  fourth->next=fifth;
  fifth->next=NULL;
 
  Node *newnode=mid(head);
  cout<<newnode->data;
  return 0;
  
}


//A FUNCTION IF WE WANT TO FIND THE MIDDLE USING TWO POINTERS
Node* mid(Node*head){
  int l=length(head);
   int middle;
  if(l%2==0){
     middle=l/2;
  }
  else{
    middle=(l/2)+1;
  }
  int i=1;
  while(i<middle){
    i++;
    head=head->next;
  }
  return head;
}
